package com.fastcoo.fastcoopickerapp.Adaptor;

import android.app.Activity;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AlertDialog;
import androidx.recyclerview.widget.RecyclerView;

import com.fastcoo.fastcoopickerapp.Activity.AutoPickupList;
import com.fastcoo.fastcoopickerapp.Activity.Batch_Pickup;
import com.fastcoo.fastcoopickerapp.Activity.ShipmentList;
import com.fastcoo.fastcoopickerapp.Model.Autogenerated_Details;
import com.fastcoo.fastcoopickerapp.R;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;

import static android.content.Context.MODE_PRIVATE;

public class AutoGenerated_Adaptor extends RecyclerView.Adapter<AutoGenerated_Adaptor.MyViewHolder> {

    private ArrayList<Autogenerated_Details> singlePickup_results;
    Activity context;

    @Override
    public AutoGenerated_Adaptor.MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.content_autopickup_adaptor, parent, false);
        return new AutoGenerated_Adaptor.MyViewHolder(view);
    }

    public AutoGenerated_Adaptor(ArrayList<Autogenerated_Details> singlePickup_results, Activity context) {
        this.singlePickup_results = singlePickup_results;
        this.context = context;
    }

    @Override
    public void onBindViewHolder(AutoGenerated_Adaptor.MyViewHolder holder, final int position) {

        holder.pickup_id.setText("Pickup Id:- " + singlePickup_results.get(position).getPickupId());
        holder.total.setText("Total:- " + singlePickup_results.get(position).getTotal());
        holder.total_pending.setText("Pending:- " + singlePickup_results.get(position).getTotalPending());
        holder.date.setText("Date: "+singlePickup_results.get(position).getEntrydate());

        holder.pickup.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                LayoutInflater li = LayoutInflater.from(context);
                View promptsView = li.inflate(R.layout.popup_layout, null);
                AlertDialog.Builder alertDialogBuilder = new AlertDialog.Builder(context);
                alertDialogBuilder.setView(promptsView);
                alertDialogBuilder
                        .setCancelable(false)
                        .setPositiveButton("OK",
                                new DialogInterface.OnClickListener() {
                                    public void onClick(DialogInterface dialog,int id) {
                                        EditText todes= promptsView.findViewById(R.id.edt_todes);
                                        if(todes.getText().toString().equals("")){
                                            todes.setError("Mention Totes Is Mandatory");
                                        }else {
                                            String value= todes.getText().toString();
                                            int edt_value= Integer.parseInt(value);
                                            String size= singlePickup_results.get(position).getTotalPending();
                                            int array_size=Integer.parseInt(size);
                                            if(edt_value<=array_size){
                                                Intent go_single = new Intent(context, AutoPickupList.class);
                                                go_single.putExtra("pickup_id", singlePickup_results.get(position).getPickupId());
                                                System.out.println("data" + singlePickup_results.get(position).getPickupId());
                                                go_single.putExtra("totes_value",value);
                                                context.startActivity(go_single);
                                                context.finish();
//                                                Toast.makeText(context, "Ok", Toast.LENGTH_SHORT).show();
                                            }else {
                                                Toast.makeText(context, "Entered Totes Is More Than Required", Toast.LENGTH_SHORT).show();
                                            }

                                        }

                                    }
                                })

                        .setNegativeButton("Cancel",
                                new DialogInterface.OnClickListener() {
                                    public void onClick(DialogInterface dialog,int id) {
                                        dialog.cancel();
                                    }
                                });

                AlertDialog alertDialog = alertDialogBuilder.create();
                alertDialog.show();


            }
        });

    }

    @Override
    public int getItemCount() {
        return singlePickup_results.size();
    }



    public class MyViewHolder extends RecyclerView.ViewHolder {
        TextView pickup_id, total, total_pending,date;
        Button pickup;

        public MyViewHolder(@NonNull View itemView) {
            super(itemView);
            pickup_id = itemView.findViewById(R.id.tv_pickup_id_auto);
            total = itemView.findViewById(R.id.tv_total_auto);
            total_pending = itemView.findViewById(R.id.tv_total_pending_auto);
            pickup = itemView.findViewById(R.id.btn_pickup);
            date= itemView.findViewById(R.id.tv_date_time);



        }

    }


}